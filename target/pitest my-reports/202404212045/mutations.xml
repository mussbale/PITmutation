<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>mathOperations.CalculatorTest.testAdd(mathOperations.CalculatorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTest>mathOperations.CalculatorTest.testAdd(mathOperations.CalculatorTest)</killingTest><description>replaced int return with 0 for mathOperations/Calculator::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest>mathOperations.CalculatorTest.testDivide(mathOperations.CalculatorTest)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>mathOperations.CalculatorTest.testDivide(mathOperations.CalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>3</block><killingTest>mathOperations.CalculatorTest.testDivide(mathOperations.CalculatorTest)</killingTest><description>replaced int return with 0 for mathOperations/Calculator::divide</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>4</block><killingTest>mathOperations.CalculatorTest.testFactorial(mathOperations.CalculatorTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>5</block><killingTest>mathOperations.CalculatorTest.testFactorial(mathOperations.CalculatorTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>5</block><killingTest>mathOperations.CalculatorTest.testFactorial(mathOperations.CalculatorTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>mathOperations.CalculatorTest.testFactorial(mathOperations.CalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTest>mathOperations.CalculatorTest.testFactorial(mathOperations.CalculatorTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>40</index><block>6</block><killingTest>mathOperations.CalculatorTest.testFactorial(mathOperations.CalculatorTest)</killingTest><description>replaced int return with 0 for mathOperations/Calculator::factorial</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>isPalindrome</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>mathOperations.CalculatorTest.testIsPalindrome(mathOperations.CalculatorTest)</killingTest><description>replaced boolean return with false for mathOperations/Calculator::isPalindrome</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>isPalindrome</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>7</index><block>1</block><killingTest/><description>replaced boolean return with true for mathOperations/Calculator::isPalindrome</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>mathOperations.CalculatorTest.testMultiply(mathOperations.CalculatorTest)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTest>mathOperations.CalculatorTest.testMultiply(mathOperations.CalculatorTest)</killingTest><description>replaced int return with 0 for mathOperations/Calculator::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>mathOperations.CalculatorTest.testSubtract(mathOperations.CalculatorTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTest>mathOperations.CalculatorTest.testSubtract(mathOperations.CalculatorTest)</killingTest><description>replaced int return with 0 for mathOperations/Calculator::subtract</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>sumOfNumbers</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>2</block><killingTest>mathOperations.CalculatorTest.testSumOfNumbers(mathOperations.CalculatorTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>mathOperations.Calculator</mutatedClass><mutatedMethod>sumOfNumbers</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>37</index><block>3</block><killingTest>mathOperations.CalculatorTest.testSumOfNumbers(mathOperations.CalculatorTest)</killingTest><description>replaced int return with 0 for mathOperations/Calculator::sumOfNumbers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>calculateStringLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>mathOperations.StringUtilTest.testCalculateStringLength(mathOperations.StringUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>calculateStringLength</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>14</index><block>3</block><killingTest>mathOperations.StringUtilTest.testCalculateStringLength(mathOperations.StringUtilTest)</killingTest><description>replaced int return with 0 for mathOperations/StringUtil::calculateStringLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPalindrome</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>mathOperations.StringUtilTest.testIsPalindrome(mathOperations.StringUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPalindrome</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>21</index><block>4</block><killingTest>mathOperations.StringUtilTest.testIsPalindrome(mathOperations.StringUtilTest)</killingTest><description>replaced boolean return with false for mathOperations/StringUtil::isPalindrome</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPalindrome</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>8</index><block>1</block><killingTest/><description>replaced boolean return with true for mathOperations/StringUtil::isPalindrome</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPalindrome</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>21</index><block>4</block><killingTest/><description>replaced boolean return with true for mathOperations/StringUtil::isPalindrome</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>7</block><killingTest>mathOperations.StringUtilTest.testIsPrime(mathOperations.StringUtilTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>5</block><killingTest>mathOperations.StringUtilTest.testIsPrime_NotPrime(mathOperations.StringUtilTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>mathOperations.StringUtilTest.testIsPrime(mathOperations.StringUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>4</block><killingTest>mathOperations.StringUtilTest.testIsPrime_NotPrime(mathOperations.StringUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest>mathOperations.StringUtilTest.testIsPrime(mathOperations.StringUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><index>43</index><block>8</block><killingTest>mathOperations.StringUtilTest.testIsPrime(mathOperations.StringUtilTest)</killingTest><description>replaced boolean return with false for mathOperations/StringUtil::isPrime</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>9</index><block>1</block><killingTest/><description>replaced boolean return with true for mathOperations/StringUtil::isPrime</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>isPrime</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>33</index><block>6</block><killingTest>mathOperations.StringUtilTest.testIsPrime_NotPrime(mathOperations.StringUtilTest)</killingTest><description>replaced boolean return with true for mathOperations/StringUtil::isPrime</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>5</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>mathOperations.StringUtilTest.testIsPalindrome(mathOperations.StringUtilTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>8</index><block>1</block><killingTest/><description>replaced return value with &#34;&#34; for mathOperations/StringUtil::reverse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtil.java</sourceFile><mutatedClass>mathOperations.StringUtil</mutatedClass><mutatedMethod>reverse</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>18</index><block>5</block><killingTest>mathOperations.StringUtilTest.testIsPalindrome(mathOperations.StringUtilTest)</killingTest><description>replaced return value with &#34;&#34; for mathOperations/StringUtil::reverse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>5</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>5</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTest/><description>replaced int return with 0 for mathOperations/MathOperations::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>18</index><block>3</block><killingTest/><description>replaced int return with 0 for mathOperations/MathOperations::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTest/><description>replaced int return with 0 for mathOperations/MathOperations::multiply</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MathOperations.java</sourceFile><mutatedClass>mathOperations.MathOperations</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTest/><description>replaced int return with 0 for mathOperations/MathOperations::subtract</description></mutation>
</mutations>
